<?php

namespace Modules\ForTheBuilder\Http\Controllers;

use App\Http\Controllers\Controller;
use Modules\ForTheBuilder\Http\Requests\{{modelName}}Request;
use Modules\ForTheBuilder\Entities\{{modelName}};
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;

class {{modelName}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $models = {{modelName}}::orderBy('id','desc')->paginate(config('params.pagination'));
        Log::channel('action_logs2')->info("пользователь просмотрел {{viewName}}");

        return view('forthebuilder::{{viewName}}.index',[
            'models' => $models
        ]);
    }

    /**
    * Show the form for creating a new resource.
    *
    * @return \Illuminate\Http\Response
    */
    public function create()
    {
        Log::channel('action_logs2')->info("пользователь хочет создать новую {{viewName}}");

        return view('forthebuilder::{{viewName}}.create',[

        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @return \Illuminate\Http\Response
     */
    public function store({{modelName}}Request $request)
    {
        $data = $request->validated();

        $model = {{modelName}}::create($data);

        Log::channel('action_logs2')->info("пользователь создал новую {{viewName}} : ",['info-data'=>$model]);

        return redirect()->route('forthebuilder.{{viewName}}.index')->with('success', __('locale.successfully'));
    }

    /**
     * Display the specified resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $model = {{modelName}}::findOrFail($id);
        Log::channel('action_logs2')->info("пользователь показал {{viewName}}",['info-data'=>$model]);
        return view('forthebuilder::{{viewName}}.show',[
            'model' => $model,
        ]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {

        $model = {{modelName}}::findOrFail($id);

        Log::channel('action_logs2')->info("пользователь собирается обновить {{viewName}}",['info-data'=>$model]);
        return view('forthebuilder::{{viewName}}.edit',[
            'model' => $model
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @return \Illuminate\Http\Response
     */
    public function update({{modelName}}Request $request, $id)
    {
        $data = $request->validated();
        $model = {{modelName}}::findOrFail($id);

        //$model->test = $data['test'];

        $model->save();

        Log::channel('action_logs2')->info("пользователь обновил {{viewName}}",['info-data'=>$model]);
        return redirect()->route('forthebuilder.{{viewName}}.index')->with('success', __('locale.successfully'));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $model = {{modelName}}::findOrFail($id);
        $model->delete();
        Log::channel('action_logs2')->info("пользователь удалил {{viewName}}",['info-data'=>$model]);
        return back()->with('success', __('locale.deleted'));
    }
}
